// Code generated by https://github.com/alertego/gdao/gen. YOU CAN EDIT FOR MORE.

package testdata

import "time"

// Mysql mysql
type Mysql struct {
	// AutoIncrement bigint auto_increment
	AutoIncrement *int64 `gdao:"column=auto_increment;auto"`
	// Bit bit
	Bit []uint8 `gdao:"column=bit"`
	// Tinyint tinyint
	Tinyint *int8 `gdao:"column=tinyint"`
	// TinyintUnsigned tinyint unsigned
	TinyintUnsigned *uint8 `gdao:"column=tinyint_unsigned"`
	// Tinyint1 tinyint(1)
	Tinyint1 *bool `gdao:"column=tinyint_1"`
	// Smallint smallint
	Smallint *int16 `gdao:"column=smallint"`
	// SmallintUnsigned smallint unsigned
	SmallintUnsigned *uint16 `gdao:"column=smallint_unsigned"`
	// Mediumint mediumint
	Mediumint *int32 `gdao:"column=mediumint"`
	// MediumintUnsigned mediumint unsigned
	MediumintUnsigned *uint32 `gdao:"column=mediumint_unsigned"`
	// Int int
	Int *int32 `gdao:"column=int"`
	// IntUnsigned int unsigned
	IntUnsigned *uint32 `gdao:"column=int_unsigned"`
	// Bigint bigint
	Bigint *int64 `gdao:"column=bigint"`
	// BigintUnsigned bigint unsigned
	BigintUnsigned *uint64 `gdao:"column=bigint_unsigned"`
	// Double double
	Double *float64 `gdao:"column=double"`
	// Decimal decimal
	Decimal *float64 `gdao:"column=decimal"`
	// Varchar varchar(255)
	Varchar *string `gdao:"column=varchar"`
	// Char char
	Char *string `gdao:"column=char"`
	// Text text
	Text *string `gdao:"column=text"`
	// Tinytext tinytext
	Tinytext *string `gdao:"column=tinytext"`
	// Mediumtext mediumtext
	Mediumtext *string `gdao:"column=mediumtext"`
	// Longtext longtext
	Longtext *string `gdao:"column=longtext"`
	// Enum enum('a','b','c')
	Enum *string `gdao:"column=enum"`
	// Json json
	Json *string `gdao:"column=json"`
	// Set set('a','b','c')
	Set *string `gdao:"column=set"`
	// Date date
	Date *time.Time `gdao:"column=date"`
	// Datetime datetime(3)
	Datetime *time.Time `gdao:"column=datetime"`
	// Timestamp timestamp
	Timestamp *time.Time `gdao:"column=timestamp"`
	// Year year
	Year *int32 `gdao:"column=year"`
	// Binary binary
	Binary []byte `gdao:"column=binary"`
	// Varbinary varbinary(255)
	Varbinary []byte `gdao:"column=varbinary"`
	// Geometry geometry
	Geometry []byte `gdao:"column=geometry"`
	// Blob blob
	Blob []byte `gdao:"column=blob"`
	// Tinyblob tinyblob
	Tinyblob []byte `gdao:"column=tinyblob"`
	// Mediumblob mediumblob
	Mediumblob []byte `gdao:"column=mediumblob"`
	// Longblob longblob
	Longblob []byte `gdao:"column=longblob"`
	// Numeric numeric
	Numeric *float64 `gdao:"column=numeric"`
	// Integer integer
	Integer *int32 `gdao:"column=integer"`
	// Float float
	Float *float32 `gdao:"column=float"`
	// Real real
	Real *float64 `gdao:"column=real"`
	// Boolean boolean
	Boolean *bool `gdao:"column=boolean"`
	// Time
	Time *time.Time `gdao:"column=time"`
	// Other
	Other []string `gdao:"column=other"`
	// Other2
	// gdao cannot solve this type!
	Other2 []rune `gdao:"column=other2"`
	// Other3
	Other3 *string `gdao:"column=other3"`
	// Other4
	Other4 *string `gdao:"column=other4"`
	// Other5
	// gdao cannot solve this type!
	Other5 *rune `gdao:"column=other5"`
}
